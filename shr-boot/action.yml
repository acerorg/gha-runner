name: boot self-hosted runner
description: boot self-hosted runner
inputs:
  name:
    description: 'self-hosted runner name'
    required: true
  scope:
    description: 'org or repo, organization or repository level'
    required: false
  token:
    description: 'GitHub self-hosted runner registration token'
    required: false
  runners_data_file:
    description: 'where to get the csv file for runners data'
    required: false

runs:
  using: "composite"
  steps:
    - name: prepare settings
      id: settings
      shell: bash
      run: |
        has_error="no"

        if [[ "${{ inputs.scope }}" != "" ]]; then
          scope="${{ inputs.scope }}"
        else
          if [[ "${{ env.gha-runner-scope }}" != "" ]]; then
            scope="${{ env.gha-runner-scope }}"
          else
            scope="repo"
          fi
        fi

        if [[ "${{ inputs.token }}" != "" ]]; then
          token="${{ inputs.token }}"
        else
          if [[ "${{ env.gha-runner-token }}" != "" ]]; then
            token="${{ env.gha-runner-token }}"
          else
            echo "::error ::Missing 'token' in gha-runner action"
            has_error="yes"
          fi
        fi

        if [[ "${{ inputs.runners_data_file }}" != "" ]]; then
          runners_data_file="${{ inputs.runners_data_file }}"
        else
          if [[ "${{ env.gha-runner-runners_data_file }}" != "" ]]; then
            runners_data_file="${{ env.gha-runner-runners_data_file }}"
          else
            echo "::error ::Missing 'runners_data_file' in gha-runner action"
            has_error="yes"
          fi
        fi

        if [[ "${has_error}" == "yes" ]]; then exit 1; fi

        echo "scope=${scope}" | tee -a $GITHUB_OUTPUT
        echo "token=${token}" | tee -a $GITHUB_OUTPUT
        echo "runners_data_file=${runners_data_file}" | tee -a $GITHUB_OUTPUT

    - uses: acerorg/gha-runner/use-python@MIN-340
    - uses: actions/checkout@v3

    - name: Prepare GitHub Action's registration-token
      id: gen-github-action-registration-token
      uses: acerorg/gha-runner/get-reg-token@MIN-340
      with:
        scope: ${{ steps.settings.outputs.scope }}
        token: ${{ steps.settings.outputs.token }}

    - name: get runner details
      id: get-runner-details
      uses: acerorg/gha-runner/get-runner-details-from-csv@MIN-340
      with:
        data_file_path: ${{ steps.settings.outputs.runners_data_file }}
        name: ${{ inputs.name }}

    - name: Get Subnet Id and IP
      id: get-subnet-id-ip
      uses: acerorg/gha-runner/get-ip-subnet-by-cidr@MIN-340
      with:
        ip_cidr: ${{ steps.get-runner-details.outputs.IP_CIDR }}

    - name: Update launch teamplate to latest version
      uses: acerorg/gha-runner/ec2-launch-template-update@MIN-340

    - name: Boot and register ec2 runner
      uses: acerorg/gha-runner/ec2-boot@MIN-340
      with:
        scope: ${{ steps.settings.outputs.scope }}
        TOKEN: ${{ steps.gen-github-action-registration-token.outputs.token }}
        RUNNER_NAME: ${{ inputs.name }}
        RUNNER_TAGS: ${{ steps.get-runner-details.outputs.RUNNER_TAGS }}
        DISK_SIZE: ${{ steps.get-runner-details.outputs.DISK_SIZE }}
        SUBNET_ID: ${{ steps.get-subnet-id-ip.outputs.subnet_id }}
        IP: ${{ steps.get-subnet-id-ip.outputs.ip_address }}
        INSTANCE_TYPE: ${{ steps.get-runner-details.outputs.INSTANCE_TYPE }}

    - name: Wait for Runner become Available and "online" in GitHub
      uses: acerorg/gha-runner/wait-runner-online@MIN-340
      with:
        scope: ${{ steps.settings.outputs.scope }}
        token: ${{ steps.settings.outputs.token }}
        name: ${{ inputs.name }}
