name: Get setting
description: Get gha-runner general setting

inputs:
  scope:
    description: 'org or repo, organization or repository level'
    required: false
  token:
    description: 'GitHub self-hosted runner registration token'
    required: false
  runners_data_file:
    description: 'where to get the csv file for runners data'
    required: false

outputs:
  scope:
    description: 'org or repo, organization or repository level'
    value: ${{ steps.settings.outputs.scope }}
  url_base:
    description: 'github base url depending on scope'
    value: ${{ steps.settings.outputs.url_base }}
  token:
    description: 'GitHub self-hosted runner registration token'
    value: ${{ steps.settings.outputs.token }}
  runners_data_file:
    description: 'where to get the csv file for runners data'
    value: ${{ steps.settings.outputs.runners_data_file }}

runs:
  using: "composite"
  steps:
    - name: prepare settings
      id: settings
      shell: bash
      run: |
        has_error="no"

        if [[ "${{ inputs.scope }}" != "" ]]; then
          scope="${{ inputs.scope }}"
        else
          if [[ "${{ env.gha-runner-scope }}" != "" ]]; then
            scope="${{ env.gha-runner-scope }}"
          else
            scope="repo"
          fi
        fi

        if [[ "${{ inputs.token }}" != "" ]]; then
          token="${{ inputs.token }}"
        else
          if [[ "${{ env.gha-runner-token }}" != "" ]]; then
            token="${{ env.gha-runner-token }}"
          else
            echo "::error ::Missing 'token' in gha-runner action"
            has_error="yes"
          fi
        fi

        if [[ "${{ inputs.runners_data_file }}" != "" ]]; then
          runners_data_file="${{ inputs.runners_data_file }}"
        else
          if [[ "${{ env.gha-runner-runners_data_file }}" != "" ]]; then
            runners_data_file="${{ env.gha-runner-runners_data_file }}"
          else
            echo "::error ::Missing 'runners_data_file' in gha-runner action"
            has_error="yes"
          fi
        fi

        if [[ "${has_error}" == "yes" ]]; then exit 1; fi

        if [[ "${scope}" == "org" ]]; then
          url="${{ github.api_url }}/orgs/${{ github.repository_owner }}"
        else
          url="${{ github.api_url }}/repos/${{ github.repository }}"
        fi

        echo "scope=${scope}" | tee -a $GITHUB_OUTPUT
        echo "url_base=${url}" | tee -a $GITHUB_OUTPUT
        echo "token=${token}" | tee -a $GITHUB_OUTPUT
        echo "runners_data_file=${runners_data_file}" | tee -a $GITHUB_OUTPUT
